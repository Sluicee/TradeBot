"""
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–°–æ–∑–¥–∞—ë—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î —Å –ø—É—Å—Ç—ã–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏
"""
from database import db
from logger import logger


def initialize_database():
	"""–°–æ–∑–¥–∞—Ç—å –ë–î —Å –ø—É—Å—Ç—ã–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏"""
	logger.info("=== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–î ===")
	
	try:
		# –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã
		logger.info("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ë–î...")
		db.create_tables()
		
		logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
		logger.info(f"üìç –§–∞–π–ª –ë–î: {db.database_url}")
		
		# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
		logger.info("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î:")
		
		state = db.get_paper_state()
		if state:
			logger.info(f"  Paper Trading: ${state.balance:.2f} / {state.total_trades} —Å–¥–µ–ª–æ–∫")
		else:
			logger.info("  Paper Trading: –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
		
		symbols = db.get_tracked_symbols()
		logger.info(f"  –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤: {len(symbols)}")
		
		positions = db.get_all_positions()
		logger.info(f"  –û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π: {len(positions)}")
		
		trades = db.get_trades_history(limit=1000)
		logger.info(f"  –ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫: {len(trades)} –∑–∞–ø–∏—Å–µ–π")
		
		signals = db.get_signals(limit=1000)
		logger.info(f"  –õ–æ–≥–∏ —Å–∏–≥–Ω–∞–ª–æ–≤: {len(signals)} –∑–∞–ø–∏—Å–µ–π")
		
		backtests = db.get_backtests()
		logger.info(f"  –ë—ç–∫—Ç–µ—Å—Ç–æ–≤: {len(backtests)}")
		
		logger.info("\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
		
	except Exception as e:
		logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
		raise


if __name__ == "__main__":
	initialize_database()

from typing import Dict, Any, List, Set
from logger import logger
from config import ENABLE_BTC_CORRELATION_CHECK, MAX_BTC_CORRELATED_POSITIONS

# –ì—Ä—É–ø–ø—ã –∫–æ—Ä—Ä–µ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–∫—Ç–∏–≤–æ–≤
CORRELATION_GROUPS = {
	"BTC": ["BTCUSDT", "BTCUSD", "BTCBUSD"],
	"ETH": ["ETHUSDT", "ETHUSD", "ETHBUSD", "ETHBTC"],
	"BNB": ["BNBUSDT", "BNBUSD", "BNBBUSD"],
	"SOL": ["SOLUSDT", "SOLUSD", "SOLBUSD"],
	"XRP": ["XRPUSDT", "XRPUSD", "XRPBUSD"],
	"ADA": ["ADAUSDT", "ADAUSD", "ADABUSD"],
	# L1 –±–ª–æ–∫—á–µ–π–Ω—ã —á–∞—Å—Ç–æ –∫–æ—Ä—Ä–µ–ª–∏—Ä—É—é—Ç
	"L1": ["AVAXUSDT", "ATOMUSDT", "DOTUSDT", "NEARUSDT", "APTUSDT"],
	# DeFi —Ç–æ–∫–µ–Ω—ã
	"DEFI": ["UNIUSDT", "AAVEUSDT", "LINKUSDT", "MKRUSDT"],
	# –ú–µ–º—ã
	"MEME": ["DOGEUSDT", "SHIBUSDT", "PEPEUSDT", "FLOKIUSDT"]
}

# –°–∏–º–≤–æ–ª—ã —Å –≤—ã—Å–æ–∫–æ–π –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–µ–π —Å BTC (–≤–∫–ª—é—á–∞—è –∞–ª—å—Ç–∫–æ–∏–Ω—ã)
# –í–ù–ò–ú–ê–ù–ò–ï: –í –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–∫–µ –í–°–ï –∞–ª—å—Ç–∫–æ–∏–Ω—ã –∫–æ—Ä—Ä–µ–ª–∏—Ä—É—é—Ç —Å BTC (0.7-0.9)
# –°–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä—É—é—Ç 90% —Å–¥–µ–ª–æ–∫
# –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–∫–ª—é—á–∏—Ç—å BTC-–∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é –∏–ª–∏ —É–≤–µ–ª–∏—á–∏—Ç—å –ª–∏–º–∏—Ç
HIGH_BTC_CORRELATION_GROUPS = ["ETH", "BNB", "SOL", "XRP", "ADA", "L1", "DEFI"]


def get_symbol_group(symbol: str) -> str:
	"""–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥—Ä—É–ø–ø—É –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –¥–ª—è —Å–∏–º–≤–æ–ª–∞"""
	for group_name, symbols in CORRELATION_GROUPS.items():
		if symbol in symbols:
			return group_name
	return None


def get_btc_correlation_symbols() -> Set[str]:
	"""–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å –≤—ã—Å–æ–∫–æ–π –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–µ–π —Å BTC"""
	btc_correlation_symbols = set()
	for group in HIGH_BTC_CORRELATION_GROUPS:
		if group in CORRELATION_GROUPS:
			btc_correlation_symbols.update(CORRELATION_GROUPS[group])
	return btc_correlation_symbols


def count_btc_correlated_positions(existing_positions: Dict[str, Any]) -> int:
	"""–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π —Å –≤—ã—Å–æ–∫–æ–π –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–µ–π —Å BTC"""
	btc_correlation_symbols = get_btc_correlation_symbols()
	count = 0
	for pos_symbol in existing_positions.keys():
		if pos_symbol in btc_correlation_symbols:
			count += 1
	return count


def check_correlation_risk(new_symbol: str, existing_positions: Dict[str, Any]) -> bool:
	"""
	–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∏—Å–∫ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏.
	–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é, False –µ—Å–ª–∏ —Ä–∏—Å–∫ –≤—ã—Å–æ–∫–∏–π.
	
	–í–ù–ò–ú–ê–ù–ò–ï: BTC-–∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–æ–∂–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å 90% —Å–¥–µ–ª–æ–∫ –≤ –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–∫–µ.
	–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–∫–ª—é—á–∏—Ç—å ENABLE_BTC_CORRELATION_CHECK –∏–ª–∏ —É–≤–µ–ª–∏—á–∏—Ç—å MAX_BTC_CORRELATED_POSITIONS.
	"""
	if not existing_positions:
		return True
	
	# –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—É –Ω–æ–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
	new_group = get_symbol_group(new_symbol)
	
	# –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª –Ω–µ –≤ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø–∞—Ö, —Ä–∞–∑—Ä–µ—à–∞–µ–º (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è)
	if new_group is None:
		logger.info(f"[CORRELATION] ‚úÖ {new_symbol}: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è, —Ä–∞–∑—Ä–µ—à–∞–µ–º")
		return True
	
	# –ü—Ä–æ–≤–µ—Ä–∫–∞ BTC-–∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–æ–π –¥–ª—è –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–∫–∞)
	if ENABLE_BTC_CORRELATION_CHECK:
		btc_symbols = CORRELATION_GROUPS["BTC"]
		has_btc_position = any(pos_symbol in btc_symbols for pos_symbol in existing_positions.keys())
		
		# –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∑–∏—Ü–∏—è –≤ BTC –∏ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –∞–ª—å—Ç–∫–æ–∏–Ω —Å –≤—ã—Å–æ–∫–æ–π –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–µ–π
		if has_btc_position and new_group in HIGH_BTC_CORRELATION_GROUPS:
			logger.warning(f"[CORRELATION] ‚ùå {new_symbol}: –≤—ã—Å–æ–∫–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å BTC (—É–∂–µ –µ—Å—Ç—å –ø–æ–∑–∏—Ü–∏—è –≤ BTC)")
			logger.warning(f"[CORRELATION] üí° –°–æ–≤–µ—Ç: –æ—Ç–∫–ª—é—á–∏—Ç–µ ENABLE_BTC_CORRELATION_CHECK –¥–ª—è –±–æ–ª–µ–µ –≥–∏–±–∫–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏")
			return False
		
		# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç BTC-–∫–æ—Ä—Ä–µ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
		if new_group in HIGH_BTC_CORRELATION_GROUPS:
			btc_correlated_count = count_btc_correlated_positions(existing_positions)
			if btc_correlated_count >= MAX_BTC_CORRELATED_POSITIONS:
				logger.warning(f"[CORRELATION] ‚ùå {new_symbol}: –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç BTC-–∫–æ—Ä—Ä–µ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π ({btc_correlated_count}/{MAX_BTC_CORRELATED_POSITIONS})")
				logger.warning(f"[CORRELATION] üí° –°–æ–≤–µ—Ç: —É–≤–µ–ª–∏—á—å—Ç–µ MAX_BTC_CORRELATED_POSITIONS –¥–ª—è –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è")
				return False
	
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ (—ç—Ç–æ —Ä–∞–∑—É–º–Ω–æ)
	for pos_symbol in existing_positions.keys():
		pos_group = get_symbol_group(pos_symbol)
		if pos_group == new_group:
			logger.warning(f"[CORRELATION] ‚ùå {new_symbol}: –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å {pos_symbol} (–≥—Ä—É–ø–ø–∞ '{new_group}')")
			return False
	
	logger.info(f"[CORRELATION] ‚úÖ {new_symbol}: –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞")
	return True

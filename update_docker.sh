#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ Docker

set -e

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Trading Bot (Docker)..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose
if ! command -v docker-compose &> /dev/null; then
	echo "‚ùå docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
	exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.yml" ]; then
	echo "‚ùå docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
	echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
	exit 1
fi

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–º–º–∏—Ç–∞ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–∫–∞—Ç–∞
CURRENT_COMMIT=$(git rev-parse --short HEAD)
echo "üìå –¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $CURRENT_COMMIT"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ git
if [ -n "$(git status --porcelain)" ]; then
	echo "‚ö†Ô∏è  –ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è!"
	echo "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º"
	git status --short
	echo ""
	read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N) " -n 1 -r
	echo
	if [[ ! $REPLY =~ ^[Yy]$ ]]; then
		exit 1
	fi
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
echo "üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
if ! git pull; then
	echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π!"
	exit 1
fi

NEW_COMMIT=$(git rev-parse --short HEAD)

if [ "$CURRENT_COMMIT" = "$NEW_COMMIT" ]; then
	echo "‚úÖ –£–∂–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏"
	echo ""
	read -p "–ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä? (y/N) " -n 1 -r
	echo
	if [[ ! $REPLY =~ ^[Yy]$ ]]; then
		echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
		exit 0
	fi
else
	echo "üì¶ –ù–æ–≤—ã–π –∫–æ–º–º–∏—Ç: $NEW_COMMIT"
fi

echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
if [ -f "paper_trading_state.json" ]; then
	echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
	cp paper_trading_state.json "paper_trading_state.json.backup_$(date +%Y%m%d_%H%M%S)"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "‚è∏Ô∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker-compose down

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..."
if ! docker-compose build; then
	echo ""
	echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–∞!"
	echo "–û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
	git reset --hard $CURRENT_COMMIT
	echo "–ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é..."
	docker-compose up -d
	exit 1
fi

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
if ! docker-compose up -d; then
	echo ""
	echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞!"
	echo "–û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
	git reset --hard $CURRENT_COMMIT
	docker-compose build
	docker-compose up -d
	exit 1
fi

echo ""
echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "–ò–∑–º–µ–Ω–µ–Ω–∏—è: $CURRENT_COMMIT ‚Üí $NEW_COMMIT"
echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤..."
sleep 3
docker-compose logs --tail 30

echo ""
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
echo ""
echo "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
echo "  docker-compose logs -f       # –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏"
echo "  docker-compose ps            # –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
echo "  ./healthcheck.sh             # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"
echo ""
echo "–î–ª—è –æ—Ç–∫–∞—Ç–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏:"
echo "  git reset --hard $CURRENT_COMMIT"
echo "  docker-compose up -d --build"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"


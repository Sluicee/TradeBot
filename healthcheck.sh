#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –±–æ—Ç–∞
# –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é –∏–ª–∏ —á–µ—Ä–µ–∑ cron –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è Trading Bot..."
echo ""

# –¶–≤–µ—Ç–Ω—ã–µ –≤—ã–≤–æ–¥—ã
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ –∑–∞–ø—É—Å–∫–∞
if command -v docker-compose &> /dev/null && [ -f "docker-compose.yml" ]; then
	METHOD="docker"
	echo "üì¶ –ú–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞: Docker"
elif systemctl is-active --quiet tradebot 2>/dev/null; then
	METHOD="systemd"
	echo "‚öôÔ∏è  –ú–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞: Systemd"
else
	METHOD="unknown"
	echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞${NC}"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env
echo -n "üìù –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (.env): "
if [ -f ".env" ]; then
	echo -e "${GREEN}‚úì${NC}"
	
	# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–∂–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	source .env
	
	echo -n "   TELEGRAM_TOKEN: "
	if [ -n "$TELEGRAM_TOKEN" ] && [ "$TELEGRAM_TOKEN" != "your_telegram_bot_token_here" ]; then
		echo -e "${GREEN}‚úì${NC}"
	else
		echo -e "${RED}‚úó –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
	fi
	
	echo -n "   OWNER_CHAT_ID: "
	if [ -n "$OWNER_CHAT_ID" ] && [ "$OWNER_CHAT_ID" != "your_telegram_id_here" ]; then
		echo -e "${GREEN}‚úì${NC}"
	else
		echo -e "${YELLOW}‚ö† –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ)${NC}"
	fi
else
	echo -e "${RED}‚úó –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo -n "üîÑ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: "
if [ "$METHOD" = "docker" ]; then
	if docker-compose ps | grep -q "Up"; then
		echo -e "${GREEN}‚úì –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
	else
		echo -e "${RED}‚úó –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
	fi
elif [ "$METHOD" = "systemd" ]; then
	if systemctl is-active --quiet tradebot; then
		echo -e "${GREEN}‚úì –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
	else
		echo -e "${RED}‚úó –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
	fi
else
	echo -e "${YELLOW}? –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ${NC}"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
echo "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö:"
if [ -d "logs" ]; then
	LATEST_LOG=$(ls -t logs/log_*.txt 2>/dev/null | head -n 1)
	if [ -n "$LATEST_LOG" ]; then
		ERROR_COUNT=$(grep -i "error\|exception\|failed" "$LATEST_LOG" 2>/dev/null | wc -l || echo 0)
		if [ "$ERROR_COUNT" -eq 0 ]; then
			echo -e "   ${GREEN}‚úì –û—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ${NC}"
		else
			echo -e "   ${YELLOW}‚ö† –ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: $ERROR_COUNT${NC}"
			echo "   –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –æ—à–∏–±–∫–∏:"
			grep -i "error\|exception\|failed" "$LATEST_LOG" | tail -n 3 | sed 's/^/   /'
		fi
	else
		echo -e "   ${YELLOW}‚ö† –õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
	fi
else
	echo -e "   ${YELLOW}‚ö† –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –ª–æ–≥–æ–≤
echo -n "üíæ –†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤: "
if [ -d "logs" ]; then
	LOG_SIZE=$(du -sh logs/ 2>/dev/null | cut -f1)
	echo "$LOG_SIZE"
	
	# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –±–æ–ª—å—à–µ 100MB
	LOG_SIZE_MB=$(du -sm logs/ 2>/dev/null | cut -f1)
	if [ "$LOG_SIZE_MB" -gt 100 ]; then
		echo -e "   ${YELLOW}‚ö† –õ–æ–≥–∏ –∑–∞–Ω–∏–º–∞—é—Ç –º–Ω–æ–≥–æ –º–µ—Å—Ç–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞.${NC}"
		echo "   –ö–æ–º–∞–Ω–¥–∞: find logs/ -name '*.log' -mtime +7 -delete"
	fi
else
	echo -e "${YELLOW}–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
if [ "$METHOD" = "docker" ]; then
	echo "üñ•Ô∏è  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ (Docker):"
	docker stats --no-stream --format "   CPU: {{.CPUPerc}}, Memory: {{.MemUsage}}" tradebot 2>/dev/null || echo -e "   ${YELLOW}–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ${NC}"
elif [ "$METHOD" = "systemd" ]; then
	echo "üñ•Ô∏è  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
	PID=$(pgrep -f "python.*bot.py" | head -n 1)
	if [ -n "$PID" ]; then
		ps -p "$PID" -o %cpu,%mem,rss,vsz | tail -n 1 | awk '{printf "   CPU: %s%%, Memory: %s%% (RSS: %d KB, VSZ: %d KB)\n", $1, $2, $3, $4}'
	else
		echo -e "   ${YELLOW}–ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
	fi
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏—è
echo "üìÅ –§–∞–π–ª—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è:"
echo -n "   paper_trading_state.json: "
if [ -f "paper_trading_state.json" ]; then
	echo -e "${GREEN}‚úì${NC} ($(stat -c%s paper_trading_state.json) bytes)"
else
	echo -e "${YELLOW}–ù–µ –Ω–∞–π–¥–µ–Ω (–Ω–æ—Ä–º–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)${NC}"
fi

echo -n "   tracked_symbols.json: "
if [ -f "tracked_symbols.json" ]; then
	SYMBOL_COUNT=$(jq '. | length' tracked_symbols.json 2>/dev/null || echo "?")
	echo -e "${GREEN}‚úì${NC} ($SYMBOL_COUNT —Å–∏–º–≤–æ–ª–æ–≤)"
else
	echo -e "${YELLOW}–ù–µ –Ω–∞–π–¥–µ–Ω (–Ω–æ—Ä–º–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)${NC}"
fi

echo ""

# –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""
echo "üìã –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è:"

HEALTH_SCORE=0
MAX_SCORE=5

# –ü—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —Å—á–µ—Ç–∞
[ -f ".env" ] && ((HEALTH_SCORE++))
[ -n "$TELEGRAM_TOKEN" ] && [ "$TELEGRAM_TOKEN" != "your_telegram_bot_token_here" ] && ((HEALTH_SCORE++))
[ "$METHOD" != "unknown" ] && ((HEALTH_SCORE++))

if [ "$METHOD" = "docker" ]; then
	docker-compose ps | grep -q "Up" && ((HEALTH_SCORE++))
elif [ "$METHOD" = "systemd" ]; then
	systemctl is-active --quiet tradebot && ((HEALTH_SCORE++))
fi

[ "${ERROR_COUNT:-0}" -eq 0 ] && ((HEALTH_SCORE++))

if [ "$HEALTH_SCORE" -eq "$MAX_SCORE" ]; then
	echo -e "${GREEN}‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ.${NC}"
elif [ "$HEALTH_SCORE" -ge 3 ]; then
	echo -e "${YELLOW}‚ö†Ô∏è  –•–æ—Ä–æ—à–æ, –Ω–æ –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.${NC}"
else
	echo -e "${RED}‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã!${NC}"
fi

echo "–°—á–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è: $HEALTH_SCORE/$MAX_SCORE"
echo ""

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
if [ "$METHOD" = "docker" ]; then
	echo "   –õ–æ–≥–∏:        docker-compose logs -f"
	echo "   –†–µ—Å—Ç–∞—Ä—Ç:     docker-compose restart"
	echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:   docker-compose stop"
elif [ "$METHOD" = "systemd" ]; then
	echo "   –õ–æ–≥–∏:        journalctl -u tradebot -f"
	echo "   –†–µ—Å—Ç–∞—Ä—Ç:     sudo systemctl restart tradebot"
	echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:   sudo systemctl stop tradebot"
fi
echo "   –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤: find logs/ -name '*.log' -mtime +7 -delete"
echo ""

